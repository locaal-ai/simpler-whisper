name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_call:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-latest', 'macos-latest', 'ubuntu-latest']
        python-version: ['3.11', '3.12']
        platform: ['x86_64', 'arm64', 'win64']
        acceleration: ['cpu', 'cuda', 'hipblas', 'vulkan']
        exclude:
          - os: windows-latest
            platform: arm64
          - os: windows-latest
            platform: x86_64
          - os: macos-latest
            acceleration: cuda
          - os: macos-latest
            acceleration: hipblas
          - os: macos-latest
            acceleration: vulkan
          - os: macos-latest
            platform: win64
          - os: ubuntu-latest
            platform: win64
          - os: ubuntu-latest
            platform: arm64
          - os: ubuntu-latest
            acceleration: cuda
          - os: ubuntu-latest
            acceleration: hipblas
          - os: ubuntu-latest
            acceleration: vulkan

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python Non-Mac
      if: ${{ matrix.os != 'macos-latest' }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Python Mac arm64
      if: ${{ matrix.os == 'macos-latest' && matrix.platform == 'arm64' }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        architecture: 'arm64'

    - name: Set up Python Mac x86_64
      if: ${{ matrix.os == 'macos-latest' && matrix.platform == 'x86_64' }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        architecture: 'x64'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy cmake wheel setuptools build

    - name: Build wheel
      env:
        SIMPLER_WHISPER_ACCELERATION: ${{ matrix.acceleration }}
        SIMPLER_WHISPER_PLATFORM: ${{ matrix.platform }}
        SIMPLER_WHISPER_PYTHON_VERSION: ${{ matrix.python-version }}
      run: |
        python setup.py build_ext --inplace
        python -m build --wheel

    - name: Install built wheel Non-Windows
      if: startsWith(matrix.os, 'windows') == false
      run: |
        pip install dist/*.whl

    - name: Install built wheel Windows
      if: startsWith(matrix.os, 'windows') == true
      shell: pwsh
      run: |
        $wheelFile = Get-ChildItem dist/*.whl | Select-Object -First 1
        if (-not $wheelFile) {
          Write-Error "No wheel file found in dist directory"
          exit 1
        }
        Write-Output "Installing wheel file: $($wheelFile.FullName)"
        pip install $wheelFile.FullName

    - name: Test import
      run: |
        python -c "import simpler_whisper; print(simpler_whisper.__file__)"

    - name: Rename wheel file
      shell: python
      run: |
        import os
        import glob

        wheel_file = glob.glob('dist/*.whl')[0]
        base_name = os.path.basename(wheel_file)
        name_parts = base_name.split('-')

        # Insert acceleration and platform after the first part of the name
        underscore_parts = [name_parts[0], '${{ matrix.acceleration }}', '${{ matrix.platform }}']
        new_name_parts = ['_'.join(underscore_parts)] + name_parts[1:]
        new_name = '-'.join(new_name_parts)

        new_path = os.path.join('dist', new_name)
        os.rename(wheel_file, new_path)
        print(f"Renamed {base_name} to {new_name}")

    - name: Set wheel name
      shell: pwsh
      run: |
        $wheelName = "wheel-${{ matrix.os }}-${{ matrix.platform }}-py${{ matrix.python-version }}"
        if ("${{ matrix.acceleration }}" -ne "") {
          $wheelName += "-${{ matrix.acceleration }}"
        }
        echo "WHEEL_NAME=$wheelName" >> $env:GITHUB_ENV

    - name: Upload wheel
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.WHEEL_NAME }}
        path: dist/*.whl
