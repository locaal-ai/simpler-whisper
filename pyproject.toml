[build-system]
requires = ["setuptools>=45", "wheel", "cmake>=3.12", "numpy<=1.26.4"]
build-backend = "setuptools.build_meta"

[project]
name = "simpler-whisper"
dynamic = ["version"]
authors = [
    {name = "Roy Shilkrot", email = "roy.shil@gmail.com"},
]
description = "A simple Python wrapper for whisper.cpp"
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "numpy",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0",
    "requests>=2.0.0",
]

[project.urls]
"Homepage" = "https://github.com/locaal-ai/simpler-whisper"
"Bug Tracker" = "https://github.com/locaal-ai/simpler-whisper/issues"

[tool.setuptools]
packages = ["simpler_whisper"]
include-package-data = true

[tool.setuptools.package-data]
simpler_whisper = ["*.dll", "*.pyd", "*.so", "*.metal", "*.dylib"]

[tool.pytest]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.cibuildwheel]
# Environment variables
environment = { PIP_PREFER_BINARY="1" }

# Build configuration
build-verbosity = 1

# Test configuration
test-command = """
python -c "
import os
import sys
import site
site.addsitedir(os.path.abspath('..'))
print('Python path:', sys.path)
print('Working directory:', os.getcwd())
print('Directory listing:', os.listdir())
print('Parent directory:', os.listdir('..'))
try:
    import simpler_whisper
    print('simpler_whisper found at:', simpler_whisper.__file__)
except ImportError as e:
    print('Failed to import simpler_whisper:', e)
"
pytest {project}/tests
"""

test-extras = ["test"]

# Before test configuration
before-test = """
pip install pytest requests numpy
python -c "
import os
import requests
model_url = 'https://ggml.ggerganov.com/ggml-model-whisper-tiny.en-q5_1.bin'
model_path = 'ggml-tiny.en-q5_1.bin'
if not os.path.exists(model_path):
    print('Downloading whisper model...')
    response = requests.get(model_url)
    with open(model_path, 'wb') as f:
        f.write(response.content)
    print('Model downloaded successfully')
"
"""

[tool.cibuildwheel.macos]
environment = { MACOSX_DEPLOYMENT_TARGET="10.13" }
repair-wheel-command = """
MACOSX_DEPLOYMENT_TARGET=10.13 delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}
"""
test-skip = "*_universal2:*"
